From f0be9439a269c88011ba4e519357cd91e619b756 Mon Sep 17 00:00:00 2001
From: Sawan Roy <sawan.roy@trunexa.com>
Date: Mon, 11 Apr 2022 13:37:29 +0530
Subject: [PATCH] Power notifier: add a new properties for suspend/resume

---
 .../core/java/com/android/server/power/Notifier.java    | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/services/core/java/com/android/server/power/Notifier.java b/services/core/java/com/android/server/power/Notifier.java
index 8f0fd60..efa7ea7 100644
--- a/services/core/java/com/android/server/power/Notifier.java
+++ b/services/core/java/com/android/server/power/Notifier.java
@@ -31,6 +31,7 @@ import android.media.Ringtone;
 import android.media.RingtoneManager;
 import android.metrics.LogMaker;
 import android.net.Uri;
+import android.net.wifi.WifiManager;
 import android.os.BatteryStats;
 import android.os.Handler;
 import android.os.Looper;
@@ -40,7 +41,9 @@ import android.os.PowerManager.WakeReason;
 import android.os.PowerManagerInternal;
 import android.os.Process;
 import android.os.RemoteException;
+import android.os.ServiceManager;
 import android.os.SystemClock;
+import android.os.SystemProperties;
 import android.os.UserHandle;
 import android.os.VibrationEffect;
 import android.os.Vibrator;
@@ -163,6 +166,8 @@ public class Notifier {
 
     // True if a user activity message should be sent.
     private boolean mUserActivityPending;
+    private WifiManager mWifiManager;
+    private boolean wifi_state_pre_suspend;
 
     public Notifier(Looper looper, Context context, IBatteryStats batteryStats,
             SuspendBlocker suspendBlocker, WindowManagerPolicy policy) {
@@ -201,6 +206,8 @@ public class Notifier {
         } catch (RemoteException ex) { }
         FrameworkStatsLog.write(FrameworkStatsLog.INTERACTIVE_STATE_CHANGED,
                 FrameworkStatsLog.INTERACTIVE_STATE_CHANGED__STATE__ON);
+
+	mWifiManager = (WifiManager) mContext.getSystemService(context.WIFI_SERVICE);
     }
 
     /**
@@ -760,8 +767,13 @@ public class Notifier {
         }
 
         if (mActivityManagerInternal.isSystemReady()) {
+	    SystemProperties.set("vendor.force.suspend", "false");
             mContext.sendOrderedBroadcastAsUser(mScreenOnIntent, UserHandle.ALL, null,
                     mWakeUpBroadcastDone, mHandler, 0, null, null);
+	    if(wifi_state_pre_suspend) {
+                 mWifiManager.setWifiEnabled(true);
+                 wifi_state_pre_suspend = false;
+            }
         } else {
             EventLog.writeEvent(EventLogTags.POWER_SCREEN_BROADCAST_STOP, 2, 1);
             sendNextBroadcast();
@@ -785,6 +797,11 @@ public class Notifier {
         if (mActivityManagerInternal.isSystemReady()) {
             mContext.sendOrderedBroadcastAsUser(mScreenOffIntent, UserHandle.ALL, null,
                     mGoToSleepBroadcastDone, mHandler, 0, null, null);
+	    SystemProperties.set("vendor.force.suspend", "true");
+            if (mWifiManager != null && mWifiManager.isWifiEnabled()) {
+                 wifi_state_pre_suspend = true;
+                 mWifiManager.setWifiEnabled(false);
+            }
         } else {
             EventLog.writeEvent(EventLogTags.POWER_SCREEN_BROADCAST_STOP, 3, 1);
             sendNextBroadcast();
-- 
2.7.4

